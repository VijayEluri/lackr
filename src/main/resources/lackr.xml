<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	">

	<context:property-placeholder order="10"
		location="${lackr.properties}" ignore-resource-not-found="true"
		ignore-unresolvable="true" />

	<context:property-placeholder order="20"
		location="classpath:/lackr.default.properties"
		ignore-resource-not-found="false" ignore-unresolvable="true" />

	<context:annotation-config />

	<bean id="serverPort" class="java.lang.Integer">
		<constructor-arg value="${lackr.port}"></constructor-arg>
	</bean>

	<bean id="rapportr" class="com.fotonauts.commons.RapportrService"
		p:facility="lackr" p:mongoRapportrQueuePath="${lackr.rapportr.mongo}"
		p:grid="${lackr.rapportr.grid}" p:ircErrorChannel="${lackr.rapportr.channel}"
		p:mongoAccessLogPath="${lackr.mongolog.access}" />

	<bean id="proxyService" class="com.fotonauts.lackr.Service"
		destroy-method="stop" p:interpolr-ref="interpolr" p:timeout="${lackr.timeout}"
		p:graphiteHostAndPort="${lackr.graphite}" p:grid="${lackr.grid}"
		p:rapportr-ref="rapportr" lazy-init="true">
		<property name="backends">
			<array>
				<ref bean="femtor${lackr.femtorImpl}Backend" />
				<ref bean="picorBackend" />
			</array>
		</property>
	</bean>

	<bean id="interpolr" class="com.fotonauts.lackr.interpolr.Interpolr">
		<property name="rules">
			<list>
				<bean class="com.fotonauts.lackr.mustache.DumpArchiveRule" />
				<bean class="com.fotonauts.lackr.mustache.ArchiveRule" />
				<bean class="com.fotonauts.lackr.mustache.TemplateRule" />
				<bean class="com.fotonauts.lackr.mustache.EvalRule" />
				<bean class="com.fotonauts.lackr.interpolr.SimpleSubstitutionRule"
					p:placeholder="http://_A_S_S_E_T_S___P_A_T_H_" p:replacement="${lackr.assets_prefix}" />
				<bean class="com.fotonauts.lackr.interpolr.SimpleSubstitutionRule"
					p:placeholder="https://_A_S_S_E_T_S___P_A_T_H_" p:replacement="${lackr.assets_prefix_ssl}" />
				<bean class="com.fotonauts.lackr.esi.HttpESIRule" />
				<bean class="com.fotonauts.lackr.esi.FemtorJSESIRule" />
				<bean class="com.fotonauts.lackr.esi.JSESIRule" />
				<bean class="com.fotonauts.lackr.esi.JSEscapedMLESIRule" />
				<bean class="com.fotonauts.lackr.esi.JSMLESIRule" />
				<bean class="com.fotonauts.lackr.esi.MLESIRule" />
				<bean class="com.fotonauts.lackr.picorassets.AssetPrefixRule"
					p:resolver-ref="assetResolver" />
			</list>
		</property>
	</bean>

	<bean id="picorBackend" class="com.fotonauts.lackr.client.JettyBackend"
		p:actualClient-ref="jettyHttpClient">
		<property name="director">
			<bean class="com.fotonauts.lackr.hashring.HashRing"
				p:rapportrInterface-ref="rapportr" p:probeUrl="${lackr.probeUrl}"
				p:hostnames="${lackr.backends}" />

		</property>
	</bean>

	<bean id="femtorHttpBackend" class="com.fotonauts.lackr.client.JettyBackend"
		p:actualClient-ref="jettyHttpClient" lazy-init="true">
		<property name="director">
			<bean class="com.fotonauts.lackr.hashring.HashRing"
				p:rapportrInterface-ref="rapportr" p:probeUrl="${lackr.probeUrl}"
				p:hostnames="${lackr.femtorBackend}" />

		</property>
	</bean>

	<bean id="femtorInProcessBackend" class="com.fotonauts.lackr.femtor.InProcessFemtor"
		lazy-init="true" p:femtorJar="${lackr.femtorJar}"
		p:femtorHandlerClass="${lackr.femtorClass}" />

	<bean id="jettyHttpClient" class="org.eclipse.jetty.client.HttpClient"
		init-method="start" destroy-method="stop" p:connectTimeout="500"
		p:followRedirects="false" p:maxRequestsQueuedPerDestination="16384"
		lazy-init="true">
		<property name="cookieStore">
			<bean class="org.eclipse.jetty.util.HttpCookieStore.Empty"></bean>
		</property>
		<!-- <property name="connectorType"> <util:constant static-field="org.eclipse.jetty.client.HttpClient.CONNECTOR_SELECT_CHANNEL" 
			/> </property> -->
	</bean>

	<bean id="assetResolver" class="com.fotonauts.lackr.picorassets.PicorAssetResolver"
		p:magicPrefix="${lackr.assets.magicPrefix}"
		p:cdnPrefix="${lackr.assets.cdnPrefix}"
		p:assetDirectoryPath="${lackr.assets.assetDirectoryPath}">
	</bean>
</beans>
